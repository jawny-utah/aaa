version: 2.1
orbs:
  ruby: circleci/ruby@0.1.2

jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point
    parallelism: 3 # run three instances of this job in parallel
    docker: # run the steps with Docker
      - image: circleci/ruby:2.6.3-node-browsers # ...with this image as the primary container; this is where all `steps` will run
        environment: # environment variables for primary container
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          PGHOST: 127.0.0.1
          PGUSER: circleci-demo-ruby
          RAILS_ENV: test
      - image: circleci/postgres:9.6.2-alpine # database image
        environment: # environment variables for database
          POSTGRES_USER: root
          POSTGRES_DB: aaa_db
          POSTGRES_PASSWORD: ""
      - image: selenium/standalone-chrome:3.1.0
    steps: # a collection of executable commands
      - checkout # special step to check out source code to working directory

      - run: # Install Ruby dependencies
          name: Bundle Install
          command: gem install bundler

      # Which version of bundler?
      - run:
          name: Which bundler?
          command: bundle -v

      # Restore bundle cache
      # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
      - restore_cache:
          keys:
            - rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
            - rails-demo-bundle-v2-

      # Store bundle cache for Ruby dependencies
      - save_cache:
          key: rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      # Only necessary if app uses webpacker or yarn in some other way
      - restore_cache:
          keys:
            - rails-demo-yarn-{{ checksum "yarn.lock" }}
            - rails-demo-yarn-

      - run:
          name: update-npm
          command: 'curl -sL https://deb.nodesource.com/setup_13.x | sudo -E bash -'

      - run:
          name: install npm
          command: sudo apt-get install -y nodejs

      - run:
          name: check npm version
          command: npm -v

      - run:
          name: Yarn Install
          command: sudo npm install -g yarn

      - run:
          name: Yarn Install
          command: yarn install --cache-folder ~/.cache/yarn

      # Store yarn / webpacker cache
      - save_cache:
          key: rails-demo-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: install bundles
          command: bundle install

      - run: sudo apt install -y postgresql-client || true

      - run:
          name: Set up DB
          command: |
            bundle exec rake db:create db:schema:load --trace
            bundle exec rake db:migrate

      # - run:
      #     name: Parallel RSpec
      #     command: bin/rails test
      #
      - run:
          name: Run rspec in parallel
          command: |
            bundle exec rspec $(circleci tests glob "spec/**/*_spec.rb")

      # Save test results for timing analysis
      - store_test_results: # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: test_results
